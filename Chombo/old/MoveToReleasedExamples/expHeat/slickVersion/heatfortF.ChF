C      _______              __
C     / ___/ /  ___  __ _  / /  ___
C    / /__/ _ \/ _ \/  V \/ _ \/ _ \
C    \___/_//_/\___/_/_/_/_.__/\___/
C    Please refer to Copyright.txt, in Chombo's root directory.

#include "CONSTANTS.H"

      subroutine heatsub(
     &     CHF_FRA1[phi],
     &     CHF_FRA1[lph],
     &     CHF_BOX[reg],
     &     CHF_CONST_REAL[dt],
     &     CHF_CONST_REAL[dx],
     &     CHF_CONST_REAL[nu])

      REAL_T lapphi
      integer CHF_DDECL[i;j;k], idir
      integer CHF_DDECL[ii;jj;kk]


c      advance solution
      CHF_MULTIDO[reg;i;j;k]

      lapphi = zero
      do idir = 0,CH_SPACEDIM-1

      CHF_DTERM[
         ii = CHF_ID(idir, 0);
         jj = CHF_ID(idir, 1);
         kk = CHF_ID(idir, 2)]

         lapphi = lapphi +
     &        (phi(CHF_IX[i+ii;j+jj;k+kk])
     &        +phi(CHF_IX[i-ii;j-jj;k-kk])
     &        -two*phi(CHF_IX[i;j;k]))/dx/dx
      enddo

      lph(CHF_IX[i;j;k]) = lapphi

      CHF_ENDDO

c      advance solution
      CHF_MULTIDO[reg;i;j;k]

      phi(CHF_IX[i;j;k]) = phi(CHF_IX[i;j;k]) +
     &        nu*dt*lph(CHF_IX[i;j;k])

      CHF_ENDDO

      return
      end


      subroutine bndrysub(
     &     CHF_FRA1[phi],
     &     CHF_BOX[reg],
     &     CHF_CONST_INT[idir],
     &     CHF_CONST_INT[iside])

      integer CHF_DDECL[i;j;k]
      integer CHF_DDECL[ii;jj;kk]

      CHF_DTERM[
      ii = iside*CHF_ID(0,idir);
      jj = iside*CHF_ID(1,idir);
      kk = iside*CHF_ID(2,idir)]

c      advance solution
      CHF_MULTIDO[reg;i;j;k]

      phi(CHF_IX[i;j;k]) = -phi(CHF_IX[i-ii;j-jj;k-kk])

      CHF_ENDDO

      return
      end



