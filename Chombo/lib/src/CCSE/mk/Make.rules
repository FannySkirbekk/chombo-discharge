#
# $Id: Make.rules,v 1.1 2007-05-24 18:12:04 tdsternberg Exp $
#

clean::
	$(RM) $(objTempDir)/*.o $(f77TempDir)/*.f $(objEXETempDir)/*.o
	$(RM) $(EBASE)$(optionsSuffix).ex *.pure

realclean: clean
	$(RM) TAGS tags BROWSE
	$(RM) -r d o f ii_files *~
	$(RM) *.ex *.ii *.o mon.out gmon.out
	$(RM) work.pc work.pcl

tags:	$(allSources)
	ctags $^

TAGS:	$(allSources)
	etags $^

BROWSE:	$(T_headesr) $(T_sources) $(CEXE_headers) $(CEXE_sources)
	ebrowse $^

.PHONY:	all clean TAGS realclean tags BROWSE
#
# Rules for building executable.
#
$(executable):	$(objForExecs)
	$(PRELINK) $(CXX) $(CPPFLAGS) $(CXXFLAGS) $(LDFLAGS) \
		-o $@ $(objForExecs) $(libraries)
#
# Rule for building a purified executable.
#
ifdef PURIFY
%.pure: %
	$(PURIFY) $(PURIFYFLAGS) $^
endif
#
# Rules for objects.
#
$(objEXETempDir)/%.o: %.cpp
	@if [ ! -d $(objEXETempDir) ]; then mkdir -p $(objEXETempDir); fi
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c $(CXXEXEFLAGS) $< $(EXE_OUTPUT_OPTION)

$(objEXETempDir)/%.o: %.c
	@if [ ! -d $(objEXETempDir) ]; then mkdir -p $(objEXETempDir); fi
	$(CC) $(CFLAGS) $(CPPFLAGS) -c $(CEXEFLAGS) -DBL_LANG_C $< $(EXE_OUTPUT_OPTION)

$(objEXETempDir)/%.o: %.F
	@if [ ! -d $(objEXETempDir) ]; then mkdir -p $(objEXETempDir); fi
	@if [ ! -d $(f77TempDir) ]; then mkdir -p $(f77TempDir); fi
	$(FORT_CPP) -DBL_LANG_FORT $(CPPFLAGS) $< | $(FORTPREP) > $(f77TempDir)/$*.f
	$(FC) $(FFLAGS) $(fincludes) -c $(FEXEFLAGS) $(f77TempDir)/$*.f $(FORT_EXE_OUTPUT_OPTION)

$(objEXETempDir)/%.o: %.f90
	@if [ ! -d $(objEXETempDir) ]; then mkdir -p $(objEXETempDir); fi
	$(F90) $(F90FLAGS) $(fFLAGS) $(fincludes) -c $(fEXEFLAGS) $< $(FORT_EXE_OUTPUT_OPTION)

$(objEXETempDir)/%.o: %.f
	@if [ ! -d $(objEXETempDir) ]; then mkdir -p $(objEXETempDir); fi
	$(fC) $(fFLAGS) $(fincludes) -c $(fEXEFLAGS) $< $(FORT_EXE_OUTPUT_OPTION)
#
# Rules for dependencies in bare object files.
#
$(depEXETempDir)/%.d: %.cpp
	@echo Depending $< ...
	@if [ ! -d $(depEXETempDir) ]; then mkdir -p $(depEXETempDir); fi
	@$(SHELL) -ec '$(MKDEP) $(includes) $< | \
		sed -e '\''s,^[^:]*\/,,'\'' | \
		sed -e '\''s,$*.o,$(objEXETempDir)/& $@,'\'' > $@'

$(depEXETempDir)/%.d: %.c
	@echo Depending $< ...
	@if [ ! -d $(depEXETempDir) ]; then mkdir -p $(depEXETempDir); fi
	@$(SHELL) -ec '$(MKDEP) $(includes) $< | \
		sed -e '\''s,^[^:]*\/,,'\'' | \
		sed -e '\''s,$*.o,$(objEXETempDir)/& $@,'\'' > $@'

$(depEXETempDir)/%.d: %.F90
	@echo Depending $< ...
	@if [ ! -d $(depEXETempDir) ]; then mkdir -p $(depEXETempDir); fi
	@$(SHELL) -ec '$(MKDEP) -fortran $(fincludes) $< | \
		sed -e '\''s,^[^:]*\/,,'\'' | \
		sed -e '\''s,$*.o,$(objEXETempDir)/& $@,'\'' > $@'

$(depEXETempDir)/%.d: %.F
	@echo Depending $< ...
	@if [ ! -d $(depEXETempDir) ]; then mkdir -p $(depEXETempDir); fi
	@$(SHELL) -ec '$(MKDEP) -fortran $(fincludes) $< | \
		sed -e '\''s,^[^:]*\/,,'\'' | \
		sed -e '\''s,$*.o,$(objEXETempDir)/& $@,'\'' > $@'

$(depEXETempDir)/%.d: %.f90
	@echo Depending $< ...
	@if [ ! -d $(depEXETempDir) ]; then mkdir -p $(depEXETempDir); fi
	@$(SHELL) -ec '$(MKDEP) -fortran $(fincludes) $< | \
		sed -e '\''s,^[^:]*\/,,'\'' | \
		sed -e '\''s,$*.o,$(objEXETempDir)/& $@,'\'' > $@'

$(depEXETempDir)/%.d: %.f
	@echo Depending $< ...
	@if [ ! -d $(depEXETempDir) ]; then mkdir -p $(depEXETempDir); fi
	@$(SHELL) -ec '$(MKDEP) -fortran $(fincludes) $< | \
		sed -e '\''s,^[^:]*\/,,'\'' | \
		sed -e '\''s,$*.o,$(objEXETempDir)/& $@,'\'' > $@'

$(depEXETempDir)/f90.depends: $(f90EXE_sources) $(fEXE_sources) 
	@if [ ! -d $(depEXETempDir) ]; then mkdir -p $(depEXETempDir); fi
	@echo "Building f90/f dependency File ..."
	@$(MODDEP) --odir $(objEXETempDir) $^ > $(depEXETempDir)/f90.depends 

########################################################################
#
# Create MS-IDE dsp file to build this project

ifeq ($(DEBUG), TRUE)
  DspFileRoot := $(EBASE)$(DIM)d.DEBUG
  DspOlevel := 0
else
  DspOlevel := 1
  DspFileRoot = $(EBASE)$(DIM)d
endif

dsp: $(DspFileRoot).dsp
.dspDepends:    $(FEXE_sources) $(FEXE_headers) $(fEXE_sources)      \
		$(CEXE_headers) $(CEXE_sources) $(INCLUDE_LOCATIONS)
	@echo $^ > .dspDepends

$(DspFileRoot).dsp: .dspDepends
	@(echo Building DSP file = $(DspFileRoot).dsp; \
	$(TOP)/scripts/dsp.mak -p $(DspFileRoot) -t $(TOP) -d $(DIM) \
		-o $(DspFileRoot).dsp -O $(DspOlevel) -f $^)

.PHONY: dsp

#
# Now load/build the dependency files.
#
ifneq ($(MAKECMDGOALS),realclean)
ifneq ($(MAKECMDGOALS),clean)

ifdef CEXE_sources
-include $(CEXE_sources:%.cpp=$(depEXETempDir)/%.d)
endif
ifdef FEXE_sources
-include $(FEXE_sources:%.F=$(depEXETempDir)/%.d)
endif
ifdef F90EXE_sources
-include $(F90EXE_sources:%.F90=$(depEXETempDir)/%.d)
endif
ifdef fEXE_sources
-include $(fEXE_sources:%.f=$(depEXETempDir)/%.d)
endif
ifdef f90EXE_sources
-include $(depEXETempDir)/f90.depends
endif
ifdef cEXE_sources
-include $(cEXE_sources:%.c=$(depEXETempDir)/%.d)
endif

endif
endif
