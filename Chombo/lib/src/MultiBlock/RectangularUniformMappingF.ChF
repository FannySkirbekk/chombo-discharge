C      _______              __
C     / ___/ /  ___  __ _  / /  ___
C    / /__/ _ \/ _ \/  V \/ _ \/ _ \
C    \___/_//_/\___/_/_/_/_.__/\___/
C    Please refer to Copyright.txt, in Chombo's root directory.

#include "CONSTANTS.H"

      subroutine MAPRECTANGULARUNIFORM(
!     Computes physical coordinates from Cartesian coordinates.
!
!     => inputs,  <= outputs
!     coords <= physical coordinates, CH_SPACEDIM components on bx
!     mapco => cartesian coordinates, CH_SPACEDIM components on bx
!     origin => cartesian coordinates of bottom corner of rectangle
!     corner => physical coordinates of bottom corner of rectangle
!     dx => mesh spacing
!     bx => indices of points
!
!     petermc, 27 Mar 2008
     &     CHF_FRA[coords],
     &     CHF_CONST_FRA[mapco],
     &     CHF_CONST_REALVECT[origin],
     &     CHF_CONST_REALVECT[corner],
     &     CHF_CONST_REALVECT[dx],
     &     CHF_BOX[bx])

      integer idir, CHF_DDECL[i;j;k]

      if (CHF_NCOMP[coords] .ne. CH_SPACEDIM) then
         print *, 'MAPRECTANGULARUNIFORM:  coords must have ',
     &        CH_SPACEDIM, ' components'
         call MAYDAY_ERROR()
      endif

      CHF_MULTIDO[bx; i; j; k]
         do idir = 0, CH_SPACEDIM - 1
            coords(CHF_IX[i;j;k], idir) = corner(idir) +
     &           (mapco(CHF_IX[i;j;k], idir) - origin(idir))*dx(idir)
         enddo
      CHF_ENDDO

      return
      end


      subroutine MAPINVRECTANGULARUNIFORM(
!     Computes Cartesian coordinates from physical coordinates.
!
!     => inputs,  <= outputs
!     mapco <= cartesian coordinates, CH_SPACEDIM components on bx
!     coords => physical coordinates, CH_SPACEDIM components on bx
!     origin => cartesian coordinates of bottom corner of rectangle
!     corner => physical coordinates of bottom corner of rectangle
!     dx => mesh spacing
!     bx => indices of points
!
!     petermc, 7 Apr 2008
     &     CHF_FRA[mapco],
     &     CHF_CONST_FRA[coords],
     &     CHF_CONST_REALVECT[origin],
     &     CHF_CONST_REALVECT[corner],
     &     CHF_CONST_REALVECT[dx],
     &     CHF_BOX[bx])

      integer idir, CHF_DDECL[i;j;k]

      if (CHF_NCOMP[coords] .ne. CH_SPACEDIM) then
         print *, 'MAPINVRECTANGULARUNIFORM:  coords must have ',
     &        CH_SPACEDIM, ' components'
         call MAYDAY_ERROR()
      endif

      CHF_MULTIDO[bx; i; j; k]
         do idir = 0, CH_SPACEDIM - 1
            mapco(CHF_IX[i;j;k], idir) = origin(idir) +
     &           (coords(CHF_IX[i;j;k], idir) - corner(idir))/dx(idir)
         enddo
      CHF_ENDDO

      return
      end


      subroutine JACOBIANRECTANGULARUNIFORM(
!     Computes Jacobian from Cartesian coordinates.
!
!     => inputs,  <= outputs
!     jacob <= Jacobian, 1 component
!     bxwid => physical box width
!     bx => indices of points
!
!     petermc, 27 Mar 2008
     &     CHF_FRA1[jacob],
     &     CHF_CONST_REALVECT[bxwid],
     &     CHF_BOX[bx])

      integer idir, CHF_DDECL[i;j;k]
      real_t jacob1

      jacob1 = one
      do idir = 0, CH_SPACEDIM-1
         jacob1 = jacob1 * bxwid(idir)
      enddo
      CHF_MULTIDO[bx; i; j; k]
         jacob(CHF_IX[i;j;k]) = jacob1
      CHF_ENDDO

      return
      end
