# ====================================================================================================
# PHYSICAL DOMAIN
# ----------------------------------------------------------------------------------------------------			
physical_domain.lo_corner = -8E-2 -8E-2 -1E-2
physical_domain.hi_corner =  8E-2  8E-2  1E-2
# ----------------------------------------------------------------------------------------------------

# ====================================================================================================
# WIRE-WIRE GEOMETRY SETTINGS
# ----------------------------------------------------------------------------------------------------
wire_wire_geometry.eps0           = 1.0
wire_wire_geometry.turn_off_wire1 = false
wire_wire_geometry.turn_off_wire2 = false
wire_wire_geometry.wire1_center1  = -1.E-2 0.0 -100.0
wire_wire_geometry.wire1_center2  = -1.E-2 0.0  100.0
wire_wire_geometry.wire2_center1  =  1.E-2 0.0 -100.0
wire_wire_geometry.wire2_center2  =  1.E-2 0.0  100.0
wire_wire_geometry.wire1_radius   = 1E-3
wire_wire_geometry.wire2_radius   = 1E-3
wire_wire_geometry.wire1_live     = true
wire_wire_geometry.wire2_live     = false

# ====================================================================================================
# AMR SETTINGS
# ----------------------------------------------------------------------------------------------------			
amr.verbosity       = -1          # Controls verbosity. 
amr.coarsest_domain = 512 512 512 # Number of cells on coarsest domain
amr.max_amr_depth   = 3           # Maximum amr depth
amr.max_sim_depth   = 3           # Maximum simulation depth
amr.fill_ratio      = 1.0         # Fill ratio for grid generation
amr.buffer_size     = 2           # Number of cells between grid levels
amr.blocking_factor = 8           # Blocking factor
amr.max_box_size    = 32          # Maximum allowed box size
amr.max_ebis_box    = 64          # Maximum allowed box size	
amr.ref_rat         = 4 4 4 2 2 2 # Refinement ratios. 
amr.num_ghost       = 3           # Number of ghost cells. Default is 3
amr.eb_ghost        = 4           # Set number of of ghost cells for EB stuff
amr.redist_rad      = 1           # Redistribution radius for hyperbolic conservation laws
amr.sten_order      = 1           # Order for interpolation/extrapolation stencils. Must be 1 or 2
amr.sten_radius     = 1           # Radius for interpolation/extrapolation stencils. Must be 1 or 2
amr.sten_type       = linear      # Default stencil type. Valid options are 'linear', 'taylor', 'lsq'
amr.ghost_interp    = pwl         # Ghost cell interpolation type. Valid options are 'pwl' or 'quad'
amr.load_balance    = knapsack    # Load balancing algorithm. Valid options are 'knapsack' or 'elliptic'
amr.ebcf            = true        # Tell amr to forget about ebcf crossings.
# ----------------------------------------------------------------------------------------------------

# ====================================================================================================
# PLASMA ENGINE SETTINGS
# ----------------------------------------------------------------------------------------------------	
plasma_engine.verbosity                       = 2             # Engine verbosity
plasma_engine.plot_interval                   = 50            # Plot interval
plasma_engine.regrid_interval                 = 5             # Regrid interval
plasma_engine.checkpoint_interval             = 100           # Checkpoint interval
plasma_engine.initial_regrids                 = 0             # Number of initial regrids
plasma_engine.geometry_only                   = false         # Special option that ONLY plots the geometry	
plasma_engine.start_time                      = 0             # Start time (fresh simulations only)
plasma_engine.stop_time                       = 1.0           # Stop time
plasma_engine.max_steps                       = 0             # Maximum number of steps
plasma_engine.output_mode                     = light         # Output mode
plasma_engine.output_directory                = ./            # Output directory
plasma_engine.output_names                    = simulation    # Simulation output names
plasma_engine.restart                         = false         # Do restart or not
plasma_engine.restart_step                    = 25            # Restart step.
plasma_engine.refine_geometry                 = -1            # Refine geometry, -1 => Refine all the way down
plasma_engine.refine_electrodes               = -1            # Refine electrode surfaces. -1 => equal to refine_geometry
plasma_engine.refine_dielectrics              = -1            # Refine dielectric surfaces. -1 => equal to refine_geometry
plasma_engine.refine_electrode_gas_interface  = -1            # Refine electrode-gas interfaces. -1 => ----"-----
plasma_engine.refine_dielectric_gas_interface = -1            # Refine dielectric-gas interfaces. -1 => ----"-----
plasma_engine.refine_solid_gas_interface      = -1            # Refine solid-gas interfaces. -1 => ----"-----
plasma_engine.refine_solid_solid_interface    = -1            # Refine solid-solid interfaces. -1 => ----"-----
# ----------------------------------------------------------------------------------------------------

# ====================================================================================================
# TIME STEPPER SETTINGS
# ----------------------------------------------------------------------------------------------------			
time_stepper.verbosity        = -1    # Class verbosity
time_stepper.solver_verbosity = -1    # Individual solver verbosities
time_stepper.fast_rte         = 5     # Solve RTE every this time steps
time_stepper.fast_poisson     = 1     # Solve Poisson every this time steps
time_stepper.min_dt           = 0.    # Minimum permitted time step
time_stepper.max_dt           = 1.    # Maximum permitted time step
time_stepper.cfl              = 0.4   # CFL number
time_stepper.relax_time       = 1.0   # Relaxation time constant
time_stepper.source_growth    = 200.0   # Maximum permissible growth due to source term
# ----------------------------------------------------------------------------------------------------

# ====================================================================================================
# POISSON SOLVER SETTINGS
# ----------------------------------------------------------------------------------------------------			
poisson_solver.bc_x_low  = dirichlet_ground      # BC type. Valid options are "neumann", "dirichlet_ground", and "dirichlet_live"
poisson_solver.bc_x_high = dirichlet_ground      # BC type. Valid options are "neumann", "dirichlet_ground", and "dirichlet_live"
poisson_solver.bc_y_low  = dirichlet_ground      # BC type. Valid options are "neumann", "dirichlet_ground", and "dirichlet_live"
poisson_solver.bc_y_high = dirichlet_ground      # BC type. Valid options are "neumann", "dirichlet_ground", and "dirichlet_live"
poisson_solver.bc_z_low  = dirichlet_ground      # BC type. Valid options are "neumann", "dirichlet_ground", and "dirichlet_live"
poisson_solver.bc_z_high = dirichlet_ground      # BC type. Valid options are "neumann", "dirichlet_ground", and "dirichlet_live"
# ----------------------------------------------------------------------------------------------------				

# ====================================================================================================
# MULTIFLUID POISSON GEOMETRIC MULTIGRID SETTINGS
# ----------------------------------------------------------------------------------------------------			
poisson_multifluid.gmg_verbosity     = 10        # GMG verbosity
poisson_multifluid.gmg_pre_smooth    = 16        # Number of relaxations in downsweep
poisson_multifluid.gmg_post_smooth   = 16        # Number of relaxations in upsweep
poisson_multifluid.gmg_bott_smooth   = 16        # NUmber of relaxations before dropping to bottom solver
poisson_multifluid.gmg_min_iter      = 5         # Minimum number of iterations
poisson_multifluid.gmg_max_iter      = 32        # Maximum number of iterations
poisson_multifluid.gmg_tolerance     = 1.E-8     # Residue tolerance
poisson_multifluid.gmg_hang          = 0.2       # Solver hang
poisson_multifluid.gmg_bottom_drop   = 8         # Bottom drop
poisson_multifluid.gmg_bottom_solver = bicgstab  # Bottom solver type. Valid options are 'simple' and 'bicgstab'
poisson_multifluid.gmg_bottom_relax  = 32        # Number of relaxations in bottom solve ('simple' solver only)

# ====================================================================================================
# EDDINGTON SP1 GEOMETRIC MULTIGRID SETTINGS
# ----------------------------------------------------------------------------------------------------			
eddington_sp1.gmg_verbosity     = 10        # GMG verbosity
eddington_sp1.gmg_pre_smooth    = 8         # Number of relaxations in downsweep
eddington_sp1.gmg_post_smooth   = 8         # Number of relaxations in upsweep
eddington_sp1.gmg_bott_smooth   = 8         # NUmber of relaxations before dropping to bottom solver
eddington_sp1.gmg_min_iter      = 5         # Minimum number of iterations
eddington_sp1.gmg_max_iter      = 32        # Maximum number of iterations
eddington_sp1.gmg_tolerance     = 1.E-6     # Residue tolerance
eddington_sp1.gmg_hang          = 0.2       # Solver hang
eddington_sp1.gmg_bottom_drop   = 8         # Bottom drop
eddington_sp1.gmg_bottom_solver = bicgtab   # Bottom solver type. Valid options are 'simple' and 'bicgstab'
eddington_sp1.gmg_bottom_relax  = 32        # Number of relaxations in bottom solve ('simple' solver only)
# ----------------------------------------------------------------------------------------------------			

# ====================================================================================================
# 7-SPECIES AIR MODEL
# ----------------------------------------------------------------------------------------------------			
air7.electron_diffusion            = true                  # Turn off electron diffusion (debugging only)
air7.excitation_efficiency         = 0.6                   # Impact excitation efficiency
air7.photoionization_efficiency    = 0.1                   # Photo-ionization efficiency
air7.electrode_townsend2           = 1.E-2                 # Townsend coefficient on electrodes
air7.electrode_quantum_efficiency  = 1.E-2                 # Quantum efficiency on electrodes
air7.dielectric_townsend2          = 1.E-1                 # Townsend coefficient on dielectrics
air7.dielectric_quantum_efficiency = 1.E-1                 # Quantum efficiency on dielectrics
air7.initial_ionization            = 1.E10                 # Initial background ionization
air7.initial_noise                 = 1.E16                 # Initial noise density
air7.initial_noise_frequency       = 1.E3 1.E3 1.E3        # Initial noise frequency
air7.initial_noise_persistence     = 0.5                   # Initial noise persistence
air7.initial_noise_octaves         = 1                     # Number of noise octaves
air7.quenching_pressure            = 0.03947               # Quenching pressure for photo-emission
air7.photon1_A_coeff               = 1.12E-4               # Parameters from Bourdon et. al photoionization model
air7.photon1_lambda_coeff          = 4.15E-2               # Parameters from Bourdon et. al photoionization model
air7.photon2_A_coeff               = 2.88E-2               # Parameters from Bourdon et. al photoionization model
air7.photon2_lambda_coeff          = 1.09E-1               # Parameters from Bourdon et. al photoionization model
air7.photon3_A_coeff               = 2.76E-1               # Parameters from Bourdon et. al photoionization model
air7.photon3_lambda_coeff          = 6.69E-1               # Parameters from Bourdon et. al photoionization model
