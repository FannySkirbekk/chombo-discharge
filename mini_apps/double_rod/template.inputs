# ====================================================================================================
# POTENTIAL CURVE
# ====================================================================================================
double_rod.potential = 30E3

# ====================================================================================================
# PHYSICAL_DOMAIN CLASS OPTIONS
# ====================================================================================================
physical_domain.lo_corner = -1E-2 -1E-2 -1    # Low corner of problem domain
physical_domain.hi_corner =  1E-2  1E-2  1    # High corner of problem domain

# ====================================================================================================
# DOUBLE_ROD CLASS OPTIONS
# ====================================================================================================
double_rod.eps0                      = 1                                # Background permittivity
double_rod.turn_off_rod1             = false                            # Turn on/off electrode
double_rod.turn_off_rod2             = true                            # Turn on/off electrode
double_rod.rod1_live                 = true                             # Live electrode or not
double_rod.rod2_live                 = true                             # Live electrode or not
double_rod.rod1_radius               = 200.E-6                          # Rod1 radius
double_rod.rod2_radius               = 100.E-6                          # Rod2 radius
double_rod.rod1_center1              = 0.0 1.0 1E-2                   # Rod1 center 1
double_rod.rod1_center2              = 0.0 0.0 0E-2                   # Rod1 center 2
double_rod.rod2_center1              = 5E-3 1.0 1E-2                   # Rod2 center 1
double_rod.rod2_center2              = 5E-3 0.0 0E-2                   # Rod2 center 2

# ====================================================================================================
# ROD COARSENING CLASS
# ====================================================================================================
rod_coarsen.enable_coarsening = true
rod_coarsen.box_lo_corner     = -1.0 400E-6
rod_coarsen.box_hi_corner     =  1.0 1
rod_coarsen.finest_level      = 0

# ====================================================================================================
# AMR_MESH OPTIONS
# ====================================================================================================
amr.verbosity       = -1          # Controls verbosity. 
amr.coarsest_domain = 128 128 128 # Number of cells on coarsest domain
amr.max_amr_depth   = 5           # Maximum amr depth
amr.max_sim_depth   = 5           # Maximum simulation depth
amr.fill_ratio      = 1.0         # Fill ratio for grid generation
amr.irreg_growth    = 1           # How much to grow irregular tagged cells
amr.buffer_size     = 1           # Number of cells between grid levels
amr.blocking_factor = 8           # Default blocking factor (16 in 3D)
amr.max_box_size    = 16          # Maximum allowed box size
amr.max_ebis_box    = 32          # Maximum allowed box size
amr.ref_rat         = 2 2 2 2 2 2 2 2 # Refinement ratios
amr.num_ghost       = 3           # Number of ghost cells. Default is 3
amr.eb_ghost        = 4           # Set number of of ghost cells for EB stuff
amr.redist_radius   = 1           # Redistribution radius for hyperbolic conservation laws
amr.stencil_order   = 1           # Order for interpolation/extrapolation stencils. Must be 1 or 2
amr.stencil_radius  = 1           # Radius for interpolation/extrapolation stencils. Must be 1 or 2
amr.stencil_type    = linear      # Default stencil type. Valid options are 'linear', 'taylor', 'lsq'
amr.ghost_interp    = pwl         # Ghost cell interpolation type. Valid options are 'pwl' or 'quad'
amr.load_balance    = knapsack    # Load balancing algorithm. Valid options are 'knapsack' or 'elliptic'
amr.ebcf            = false       # Tell amr to ignore EBCF-related code. 

# ====================================================================================================
# PLASMA_ENGINE OPTIONS
# ====================================================================================================
plasma_engine.verbosity                       = 2             # Engine verbosity
plasma_engine.plot_interval                   = 1             # Plot interval
plasma_engine.regrid_interval                 = 5             # Regrid interval
plasma_engine.checkpoint_interval             = 10            # Checkpoint interval
plasma_engine.initial_regrids                 = 4             # Number of initial regrids
plasma_engine.start_time                      = 0             # Start time (fresh simulations only)
plasma_engine.stop_time                       = 1.0           # Stop time
plasma_engine.max_steps                       = 1201          # Maximum number of steps
plasma_engine.geometry_only                   = false         # Special option that ONLY plots the geometry
plasma_engine.ebis_memory_load_balance        = false         # Use memory as loads for EBIS generation
plasma_engine.write_ebis                      = false         # Write geometry to an HDF5 file (buggy, leave as false)
plasma_engine.read_ebis                       = false         # Read EBIS when restarting a simulation
plasma_engine.output_mode                     = full          # Output mode
plasma_engine.output_directory                = ./            # Output directory
plasma_engine.output_names                    = simulation    # Simulation output names
plasma_engine.max_plot_depth                  = -1            # Restrict maximum plot depth (-1 => finest simulation level)
plasma_engine.num_plot_ghost                  = 1             # Number of ghost cells to include in plots
plasma_engine.restart                         = true          # Do restart or not
plasma_engine.restart_step                    = 1200          # Restart step
plasma_engine.restart_mode                    = medium        # Restart mode. 
plasma_engine.refine_geometry                 = -1            # Refine geometry, -1 => Refine all the way down
plasma_engine.refine_electrodes               = -1            # Refine electrode surfaces. -1 => equal to refine_geometry
plasma_engine.refine_dielectrics              = -1            # Refine dielectric surfaces. -1 => equal to refine_geometry
plasma_engine.refine_electrode_gas_interface  = -1            # Refine electrode-gas interfaces. -1 => ----"-----
plasma_engine.refine_dielectric_gas_interface = -1            # Refine dielectric-gas interfaces. -1 => ----"-----
plasma_engine.refine_solid_gas_interface      = -1            # Refine solid-gas interfaces. -1 => ----"-----
plasma_engine.refine_solid_solid_interface    = -1            # Refine solid-solid interfaces. -1 => ----"-----

# ====================================================================================================
# TIME_STEPPER OPTIONS
# ====================================================================================================
time_stepper.verbosity        = -1    # Class verbosity
time_stepper.solver_verbosity = -1    # Individual solver verbosities
time_stepper.fast_rte         = 5     # Solve RTE every this time steps
time_stepper.fast_poisson     = 1     # Solve Poisson every this time steps
time_stepper.min_dt           = 0.    # Minimum permitted time step
time_stepper.max_dt           = 1.E99 # Maximum permitted time step
time_stepper.cfl              = 0.5   # CFL number
time_stepper.relax_time       = 10.0  # Relaxation time constant
time_stepper.source_growth    = 100.0 # Relaxation time constant

# ====================================================================================================
# POISSON_SOLVER CLASS OPTIONS
# ====================================================================================================
poisson_solver.bc_x_low  = neumann               # BC type. Valid options are "neumann", "dirichlet_ground", and "dirichlet_live"
poisson_solver.bc_x_high = neumann               # BC type. Valid options are "neumann", "dirichlet_ground", and "dirichlet_live"
poisson_solver.bc_y_low  = dirichlet_ground      # BC type. Valid options are "neumann", "dirichlet_ground", and "dirichlet_live"
poisson_solver.bc_y_high = dirichlet_live        # BC type. Valid options are "neumann", "dirichlet_ground", and "dirichlet_live"
poisson_solver.bc_z_low  = dirichlet_ground      # BC type. Valid options are "neumann", "dirichlet_ground", and "dirichlet_live"
poisson_solver.bc_z_high = dirichlet_live        # BC type. Valid options are "neumann", "dirichlet_ground", and "dirichlet_live"

# ====================================================================================================
# POISSON_MULTIFLUID_GMG CLASS OPTIONS (MULTIFLUID GMG SOLVER SETTINGS)
# ====================================================================================================
poisson_multifluid.gmg_verbosity     = -1        # GMG verbosity
poisson_multifluid.gmg_pre_smooth    = 16        # Number of relaxations in downsweep
poisson_multifluid.gmg_post_smooth   = 16        # Number of relaxations in upsweep
poisson_multifluid.gmg_bott_smooth   = 16        # NUmber of relaxations before dropping to bottom solver
poisson_multifluid.gmg_min_iter      = 5         # Minimum number of iterations
poisson_multifluid.gmg_max_iter      = 32        # Maximum number of iterations
poisson_multifluid.gmg_tolerance     = 1.E-6     # Residue tolerance
poisson_multifluid.gmg_hang          = 0.2       # Solver hang
poisson_multifluid.gmg_bottom_drop   = 8         # Bottom drop
poisson_multifluid.gmg_bottom_solver = bicgstab  # Bottom solver type. Valid options are 'simple' and 'bicgstab'
poisson_multifluid.gmg_bottom_relax  = 32        # Number of relaxations in bottom solve ('simple' solver only)

# ====================================================================================================
# CDR_LAYOUT SOLVER SETTINGS
# ----------------------------------------------------------------------------------------------------
cdr_layout.which_solver = godunov                # Solver type, available options are "scharfetter-gummel" and "godunov"
cdr_gdnv.divF_nc        = covered_face           # Valid options are "covered_face" and "conservative_average"
cdr_gdnv.limit_slopes   = false                  # Valid options are "covered_face" and "conservative_average"

# ====================================================================================================
# RTE_LAYOUT CLASS OPTIONS
# ====================================================================================================
rte_layout.which_solver = eddington_sp1 # Solver type. Available option is "eddington_sp1"
rte_layout.stationary   = true          # Stationary solver ot no.

# ====================================================================================================
# EDDINGTON_SP1 CLASS OPTIONS
# ====================================================================================================
eddington_sp1.reflectivity      = 0.        # Reflectivity
eddington_sp1.gmg_verbosity     = -1        # GMG verbosity
eddington_sp1.gmg_pre_smooth    = 6         # Number of relaxations in downsweep
eddington_sp1.gmg_post_smooth   = 6         # Number of relaxations in upsweep
eddington_sp1.gmg_bott_smooth   = 6         # NUmber of relaxations before dropping to bottom solver
eddington_sp1.gmg_min_iter      = 5         # Minimum number of iterations
eddington_sp1.gmg_max_iter      = 32        # Maximum number of iterations
eddington_sp1.gmg_tolerance     = 1.E-6     # Residue tolerance
eddington_sp1.gmg_hang          = 0.2       # Solver hang
eddington_sp1.gmg_bottom_drop   = 8         # Bottom drop
eddington_sp1.gmg_bottom_solver = bicgstab  # Bottom solver type. Valid options are 'simple' and 'bicgstab'
eddington_sp1.gmg_bottom_relax  = 32        # Number of relaxations in bottom solve ('simple' solver only)

# ====================================================================================================
# RK2 CLASS OPTIONS
# ====================================================================================================
rk2.alpha = 0.5 # Set alpha. 0.5 = Heuns method, 1.0 = Midpoint method		

# ====================================================================================================
# ML_TAGGER CLASS OPTIONS
# ====================================================================================================
ml_tagger.coarsen_curvature = 0.1   # Sets eps_curv for coarsening
ml_tagger.refine_curvature  = 0.1   # Sets eps_curv for refinement
ml_tagger.refine_alpha      = 3.5   # Alpha refine
ml_tagger.refine_fudge      = 0.65   # Fudge refine

# ====================================================================================================
# MORROW_LOWKE CLASS OPTIONS
# ====================================================================================================
morrow_lowke.gas_temperature               = 300                   # Gas temperature (K)
morrow_lowke.gas_N2_frac                   = 0.8                   # Mixing fraction of nitrogen
morrow_lowke.gas_O2_frac                   = 0.2                   # Mixing fraction of oxygen
morrow_lowke.gas_pressure                  = 1.0                   # Gas pressure (atm)
morrow_lowke.gas_quenching_pressure        = 0.03947               # Quenching pressure for photo-emission (atm)
morrow_lowke.positive_species_mobility     = 2.E-4                 # Positive species mobility
morrow_lowke.negative_species_mobility     = 2.E-4                 # Negative species mobility
morrow_lowke.excitation_efficiency         = 0.6                   # Impact excitation efficiency
morrow_lowke.photoionization_efficiency    = 0.1                   # Photo-ionization efficiency
morrow_lowke.electrode_townsend2           = 1.E-6                 # Townsend coefficient on electrodes
morrow_lowke.electrode_quantum_efficiency  = 1.E-6                 # Quantum efficiency on electrodes
morrow_lowke.dielectric_townsend2          = 1.E-6                 # Townsend coefficient on dielectrics
morrow_lowke.dielectric_quantum_efficiency = 1.E-6                 # Quantum efficiency on dielectrics
morrow_lowke.dielectric_work_function      = 99                    # Dielectric work function (ev)
morrow_lowke.uniform_density               = 1.E10                 # Initial background ionization
morrow_lowke.seed_density                  = 0.E16                 # Initial seed ionization
morrow_lowke.seed_radius                   = 1E-3                  # Initial seed radius
morrow_lowke.seed_position                 = 0. 0. 0.              # Initial seed position
morrow_lowke.noise_amplitude               = 0.0                   # Initial noise amplitude
morrow_lowke.noise_octaves                 = 1                     # Initial noise octaves
morrow_lowke.noise_persistence             = 0.5                   # Reduction factor between each noise octave
morrow_lowke.noise_frequency               = 1.0 1.0 1.0           # Spatial noise frequency
morrow_lowke.photon1_A_coeff               = 1.12E-4               # Parameters from Bourdon et. al photoionization model
morrow_lowke.photon1_lambda_coeff          = 4.15E-2               # Parameters from Bourdon et. al photoionization model
morrow_lowke.photon2_A_coeff               = 2.88E-2               # Parameters from Bourdon et. al photoionization model
morrow_lowke.photon2_lambda_coeff          = 1.09E-1               # Parameters from Bourdon et. al photoionization model
morrow_lowke.photon3_A_coeff               = 2.76E-1               # Parameters from Bourdon et. al photoionization model
morrow_lowke.photon3_lambda_coeff          = 6.69E-1               # Parameters from Bourdon et. al photoionization model
