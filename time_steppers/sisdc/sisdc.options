# ====================================================================================================
# SISDC CLASS OPTIONS
#
# This class uses semi-implicit spectral deferred corrections. Diffusion is handled implicitly,
# and advection-reaction is handled explicitly.
#
# The maximum possible global order of accuracy is (p+1) where p is the number of subintervals. Each
# correction raises the order by 1 (corr_iter=0 is the first order solution). To reach the maximum
# possible order, you should perform p correction iterations. 
#
# 
# ====================================================================================================
sisdc.quad_nodes   = lobatto  # Nodes to be used for quadrature. 'lobatto', 'uniform', or 'chebyshev'
sisdc.subintervals = 1        # Number of subintervals. This will be the maximum possible order.
sisdc.corr_iter    = 1        # Number of iterations of the correction equation. Should be (subintervals-1)
                              # for maximum order

# ---------------------------------------------------------	
# Diffusive coupling
#
# This defines the weak coupling used for the implicit diffusion advance. 
# ---------------------------------------------------------
sisdc.diffusive_coupling = weak  # Diffusion coupling, either 'weak' or 'strong'
sisdc.use_tga            = false # Use second order diffusion per substep
sisdc.num_corrections    = 0     # Number of corrections for 'strong'

# ---------------------------------------------------------	
# Adaptive regridding
# ---------------------------------------------------------
sisdc.regrid_cfl      = 5.0      # Regrid if accumulated time exceeds this
# ---------------------------------------------------------

# Adaptive time stepping
# ---------------------------------------------------------
sisdc.print_report    = false    # Print report with error and stuff	
sisdc.adaptive_dt     = false    # Use adaptive time stepping
sisdc.error_norm      = 2        # Error norm (0 = Linf)
sisdc.min_corr        = 1        # Minimum number of corrections
sisdc.max_retries     = 100      # Maximum number of tries (for step rejection)
sisdc.max_growth      = 1.2      # Maximum permissible time step growth
sisdc.decrease_safety = 0.9      # Fudge factor when we decrease the time step. 
sisdc.min_cfl         = 0.1      # Minimum CFL
sisdc.max_cfl         = 0.75     # Maximum CFL
sisdc.max_error       = 1.E-3    # Error threshold
sisdc.error_index     = -1       # Error index. If -1, evaluate all CDR solvers	
sisdc.safety          = 0.75     # Safety factor for time stepping

# ---------------------------------------------------------	
# Subcycling in time
#
# DEVELOPMENT FEATURES WITH LOW ACCURACY - STAY AWAY!!!
#
#
# If you decide to subcycle, you should really, really, really use adaptive time stepping. Really. 
# ---------------------------------------------------------
sisdc.subcycle      = false      # 'false', 'standard', 'optimal', or 'multistep'
sisdc.cycle_sources = false      # Subcycle also with reaction terms
sisdc.min_cycle_cfl = 0.5        # Maximum permitted CFL (total step)	
sisdc.max_cycle_cfl = 20.0       # Maximum permitted CFL (total step)
sisdc.subcycle_cfl  = 0.5        # Maximum CFL per advective step

# ---------------------------------------------------------	
# Debugging options
# ---------------------------------------------------------
sisdc.consistent_E      = true   # Use consistent E-field computations (update in between RK stages)
sisdc.consistent_rte    = true   # Use consistent RTE updates
sisdc.compute_v         = true   # Compute v in between substeps. 
sisdc.compute_S         = true   # Compute S in between substeps.
sisdc.compute_D         = true   # Compute S in between substeps.
sisdc.do_advec_src      = true   # Turn off code functionality. Only for debugging 
sisdc.do_diffusion      = true   # Turn off code functionality. Only for debugging
sisdc.do_poisson        = true   # Turn off code functionality. Only for debugging
sisdc.do_rte            = true   # Turn off code functionality. Only for debugging

# ---------------------------------------------------------	
# Profiling options
# ---------------------------------------------------------
sisdc.profile_steps     = false  # Profile time steps with order, accuracy, cfl, etc.


# ---------------------
# Stabilization feature. Currently does NOT work with subcycling (but I'm working on it...)
# ---------------------
sisdc.extrap_advect = false      # Time extrapolate with source and diffusion in advection step
sisdc.extrap_dt     = 0.5        # How far to time-extrapolate (in terms of dt). 0.5 is usually good. 
