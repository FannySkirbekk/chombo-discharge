var searchData=
[
  ['eb_5fcentroid_5finterp',['eb_centroid_interp',['../classeb__centroid__interp.html#afe8d81c7e9d46c83df49c164d2e5a2be',1,'eb_centroid_interp::eb_centroid_interp()'],['../classeb__centroid__interp.html#acc9a696520bd45abe11ced0d41f33016',1,'eb_centroid_interp::eb_centroid_interp(const DisjointBoxLayout &amp;a_dbl, const EBISLayout &amp;a_ebisl, const ProblemDomain &amp;a_domain, const Real &amp;a_dx, const int a_order, const int a_radius, const stencil_type::which_type a_type)']]],
  ['ebcoarseaverage',['ebcoarseaverage',['../classebcoarseaverage.html#a59bde2cf9d859508d9911b46249e2c5f',1,'ebcoarseaverage::ebcoarseaverage()'],['../classebcoarseaverage.html#aba950e21b3e35499852ab8354b94cb92',1,'ebcoarseaverage::ebcoarseaverage(const DisjointBoxLayout &amp;dblFine, const DisjointBoxLayout &amp;dblCoar, const EBISLayout &amp;ebislFine, const EBISLayout &amp;ebislCoar, const ProblemDomain &amp;domainCoar, const int &amp;nref, const int &amp;nvar, const EBIndexSpace *ebisPtr)'],['../classebcoarseaverage.html#a650af26ba0aabde837e7de3af7515d60',1,'ebcoarseaverage::ebcoarseaverage(const EBLevelGrid &amp;a_eblgFine, const EBLevelGrid &amp;a_eblgCoar, const EBLevelGrid &amp;a_eblgCoFi, const int &amp;nref, const int &amp;nvar)'],['../classebcoarseaverage.html#a48c02fbd1764a3c283f115b8ac563a63',1,'ebcoarseaverage::ebcoarseaverage(const ebcoarseaverage &amp;ebcin)']]],
  ['ebconductivityop',['ebconductivityop',['../classebconductivityop.html#a50a0d77b64d8a917c4fd860137751110',1,'ebconductivityop::ebconductivityop(const EBLevelGrid &amp;a_eblgFine, const EBLevelGrid &amp;a_eblg, const EBLevelGrid &amp;a_eblgCoar, const EBLevelGrid &amp;a_eblgCoarMG, const RefCountedPtr&lt; EBQuadCFInterp &gt; &amp;a_quadCFI, const RefCountedPtr&lt; ConductivityBaseDomainBC &gt; &amp;a_domainBC, const RefCountedPtr&lt; ConductivityBaseEBBC &gt; &amp;a_ebBC, const Real &amp;a_dx, const Real &amp;a_dxCoar, const int &amp;a_refToFine, const int &amp;a_refToCoar, const bool &amp;a_hasFine, const bool &amp;a_hasCoar, const bool &amp;a_hasMGObjects, const bool &amp;a_layoutChanged, const Real &amp;a_alpha, const Real &amp;a_beta, const RefCountedPtr&lt; LevelData&lt; EBCellFAB &gt; &gt; &amp;a_acoef, const RefCountedPtr&lt; LevelData&lt; EBFluxFAB &gt; &gt; &amp;a_bcoef, const RefCountedPtr&lt; LevelData&lt; BaseIVFAB&lt; Real &gt; &gt; &gt; &amp;a_bcoIrreg, const IntVect &amp;a_ghostCellsPhi, const IntVect &amp;a_ghostCellsRHS, const int &amp;a_relaxType)'],['../classebconductivityop.html#a034c163185e7a8830484419512e60158',1,'ebconductivityop::ebconductivityop()'],['../classebconductivityop.html#a8d2a74ddcb7e2aebf83547a3f08cc5b3',1,'ebconductivityop::ebconductivityop(const ebconductivityop &amp;a_opin)']]],
  ['ebconductivityopfactory',['ebconductivityopfactory',['../classebconductivityopfactory.html#a2c3aeb45fe38f6623b04051a4e43dfe8',1,'ebconductivityopfactory::ebconductivityopfactory(const Vector&lt; EBLevelGrid &gt; &amp;a_eblgs, const Vector&lt; RefCountedPtr&lt; EBQuadCFInterp &gt; &gt; &amp;a_quadCFI, const Real &amp;a_alpha, const Real &amp;a_beta, const Vector&lt; RefCountedPtr&lt; LevelData&lt; EBCellFAB &gt; &gt; &gt; &amp;a_acoef, const Vector&lt; RefCountedPtr&lt; LevelData&lt; EBFluxFAB &gt; &gt; &gt; &amp;a_bcoef, const Vector&lt; RefCountedPtr&lt; LevelData&lt; BaseIVFAB&lt; Real &gt; &gt; &gt; &gt; &amp;a_bcoefIrreg, const Real &amp;a_dxCoarse, const Vector&lt; int &gt; &amp;a_refRatio, const RefCountedPtr&lt; BaseDomainBCFactory &gt; &amp;a_domainBCFactory, const RefCountedPtr&lt; BaseEBBCFactory &gt; &amp;a_ebBcFactory, const IntVect &amp;a_ghostCellsPhi, const IntVect &amp;a_ghostCellsRhs, const int &amp;a_relaxType, const int &amp;a_botdrop=8, int a_numLevels=-1)'],['../classebconductivityopfactory.html#a71ff5b1871c7784f5d2727c9df0ab26f',1,'ebconductivityopfactory::ebconductivityopfactory()'],['../classebconductivityopfactory.html#a63ea98a0f1b12f87c67de409666d4851',1,'ebconductivityopfactory::ebconductivityopfactory(const ebconductivityopfactory &amp;a_opin)']]],
  ['eddington_5fsp1',['eddington_sp1',['../classeddington__sp1.html#a94476bc76612cd6a49fe9e2a46a0da98',1,'eddington_sp1']]],
  ['edge_5fiterator',['edge_iterator',['../classedge__iterator.html#abdf1319ec126ef6801f6cd62971c01d1',1,'edge_iterator::edge_iterator()'],['../classedge__iterator.html#a0f7b047d873e7ff189c8efcad294af32',1,'edge_iterator::edge_iterator(dcel_poly &amp;a_poly)'],['../classedge__iterator.html#a2f747f0305720c7ac836d1ed23de34e4',1,'edge_iterator::edge_iterator(dcel_vert &amp;a_vert)']]],
  ['electrode',['electrode',['../classelectrode.html#a208aaccf10c1db3f037bb6c4e054db5d',1,'electrode::electrode()'],['../classelectrode.html#a4a8391c11111ef24c87a9cdcfdfd6a5c',1,'electrode::electrode(RefCountedPtr&lt; BaseIF &gt; a_baseif, bool a_live, Real a_fraction=1.0)']]],
  ['electron',['electron',['../classair__bolsig_1_1electron.html#a92e4c067780a4c788ac8c4333473612c',1,'air_bolsig::electron::electron()'],['../classmorrow__lowke_1_1electron.html#ac5586d59c4b81f7c6adfe17328f482a9',1,'morrow_lowke::electron::electron()']]],
  ['euler_5ff',['euler_f',['../classeuler__f.html#ab62c05bc70f6daafad3f001ecdadb897',1,'euler_f']]],
  ['explicit_5feuler_5fpredict_5fnewton',['explicit_euler_predict_newton',['../classsplitstep__rk2__tga__trapz.html#a1be4052aaf23ae72ff27b16233cce4fe',1,'splitstep_rk2_tga_trapz']]],
  ['exponentiate',['exponentiate',['../classdata__ops.html#aaec7ee10fd822d470eb2b958f62a8370',1,'data_ops::exponentiate(EBAMRCellData &amp;a_lhs, const Real a_factor)'],['../classdata__ops.html#adc34abfe1868298ab13328e38128f3b3',1,'data_ops::exponentiate(LevelData&lt; EBCellFAB &gt; &amp;a_lhs, const Real a_factor)']]],
  ['extract_5fbolsig_5fdata',['extract_bolsig_data',['../classair__bolsig.html#a75c8608b8993288555e8e0bbc0289b1a',1,'air_bolsig']]],
  ['extrapolate_5fto_5feb',['extrapolate_to_eb',['../classtime__stepper.html#aef015bc787fa4af1698665c7c3c096e3',1,'time_stepper::extrapolate_to_eb(EBAMRIVData &amp;a_extrap, const phase::which_phase a_phase, const EBAMRCellData &amp;a_data)'],['../classtime__stepper.html#a1ad1903ce4f7d2478c31eedf7e35ab51',1,'time_stepper::extrapolate_to_eb(Vector&lt; EBAMRIVData * &gt; &amp;a_extrap, const phase::which_phase a_phase, const Vector&lt; EBAMRCellData * &gt; &amp;a_data)']]],
  ['extrapolate_5fvel_5fto_5fcovered_5ffaces',['extrapolate_vel_to_covered_faces',['../classcdr__gdnv.html#afb161587cb9a8a23785e746144ee0b32',1,'cdr_gdnv']]]
];
