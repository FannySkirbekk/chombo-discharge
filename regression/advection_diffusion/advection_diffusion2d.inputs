# ====================================================================================================
# AMR_MESH OPTIONS
# ====================================================================================================
amr_mesh.lo_corner       = -1 -1       # Low corner of problem domain
amr_mesh.hi_corner       =  1  1       # High corner of problem domain
amr_mesh.verbosity       = -1          # Controls verbosity. 
amr_mesh.coarsest_domain = 128 128     # Number of cells on coarsest domain
amr_mesh.max_amr_depth   = 4           # Maximum amr depth
amr_mesh.max_sim_depth   = -1          # Maximum simulation depth
amr_mesh.refine_all_lvl  = 0           # Refine everything down to this level.
amr_mesh.mg_coarsen      = 4           # Pre-coarsening of MG levels, useful for deeper bottom solves 
amr_mesh.fill_ratio      = 1.0         # Fill ratio for grid generation
amr_mesh.irreg_growth    = 2           # How much to grow irregular tagged cells
amr_mesh.buffer_size     = 2           # Number of cells between grid levels
amr_mesh.grid_algorithm  = tiled        # Berger-Rigoustous 'br' or 'tiled' for the tiled algorithm
amr_mesh.blocking_factor = 16           # Default blocking factor (16 in 3D)
amr_mesh.max_box_size    = 16          # Maximum allowed box size
amr_mesh.max_ebis_box    = 16          # Maximum allowed box size
amr_mesh.ref_rat         = 2 2 2 2 2 2 # Refinement ratios
amr_mesh.num_ghost       = 3           # Number of ghost cells. Default is 3
amr_mesh.eb_ghost        = 4           # Set number of of ghost cells for EB stuff
amr_mesh.centroid_sten   = linear      # Centroid interp stencils. 'pwl', 'linear', 'taylor, 'lsq'
amr_mesh.eb_sten         = pwl         # EB interp stencils. 'pwl', 'linear', 'taylor, 'lsq'
amr_mesh.redist_radius   = 1           # Redistribution radius for hyperbolic conservation laws
amr_mesh.ghost_interp    = pwl         # Ghost cell interpolation type. Valid options are 'pwl' or 'quad'
amr_mesh.load_balance    = volume      # Load balancing algorithm. Valid options are 'volume' or 'elliptic'
amr_mesh.ebcf            = true        # If you have EBCF crossing, this must be true. 

# ====================================================================================================
# DRIVER OPTIONS
# ====================================================================================================
driver.verbosity                       = 3             # Engine verbosity
driver.geometry_generation             = plasmac       # Grid generation method, 'plasmac' or 'chombo'
driver.geometry_scan_level             = 0             # Geometry scan level for plasmac geometry generator
driver.recursive_regrid                = false         # Recursive regrids
driver.plot_interval                   = 10            # Plot interval
driver.regrid_interval                 = 10            # Regrid interval
driver.checkpoint_interval             = 10            # Checkpoint interval
driver.initial_regrids                 = 4             # Number of initial regrids
driver.start_time                      = 0             # Start time (fresh simulations only)
driver.stop_time                       = 1.0           # Stop time
driver.max_steps                       = 0             # Maximum number of steps
driver.geometry_only                   = false         # Special option that ONLY plots the geometry
driver.ebis_memory_load_balance        = false         # Use memory as loads for EBIS generation
driver.write_memory                    = false         # Write MPI memory report 
driver.write_ebis                      = false         # Write geometry to an HDF5 file
driver.read_ebis                       = false         # Read EBIS when restarting a simulation
driver.output_directory                = ./            # Output directory
driver.grow_tags                       = 0             # Grow tagged by this in every direction
driver.output_names                    = advection2d   # Simulation output names
driver.max_plot_depth                  = -1            # Restrict maximum plot depth (-1 => finest simulation level)
driver.max_chk_depth                   = -1            # Restrict chechkpoint depth (-1 => finest simulation level)	
driver.num_plot_ghost                  = 1             # Number of ghost cells to include in plots
driver.plt_vars                        = 0             # 'tags', 'mpi_rank'
driver.restart                         = 0             # Restart step (less or equal to 0 implies fresh simulation)
driver.allow_coarsening                = false         # Allows removal of grid levels according to cell_tagger
driver.refine_geometry                 = -1            # Refine geometry, -1 => Refine all the way down
driver.refine_electrodes               = -1            # Refine electrode surfaces. -1 => equal to refine_geometry
driver.refine_dielectrics              = -1            # Refine dielectric surfaces. -1 => equal to refine_geometry
driver.refine_electrode_gas_interface  = -1            # Refine electrode-gas interfaces. -1 => ----"-----
driver.refine_dielectric_gas_interface = -1            # Refine dielectric-gas interfaces. -1 => ----"-----
driver.refine_solid_gas_interface      = -1            # Refine solid-gas interfaces. -1 => ----"-----
driver.refine_solid_solid_interface    = -1            # Refine solid-solid interfaces. -1 => ----"-----


# ====================================================================================================
# CDR_GDNV SOLVER SETTINGS
# ----------------------------------------------------------------------------------------------------
cdr_gdnv.stochastic_diffusion = false                   # Stochastic advection. 'true' or 'false'
cdr_gdnv.seed                 = -1                      # Seed. Random seed with seed < 0
cdr_gdnv.domain_bc            = kinetic                 # 'kinetic', 'wall', 'outflow', or 'extrap'
cdr_gdnv.divF_nc              = conservative_average    # 'covered_face' or 'conservative_average'
cdr_gdnv.mass_redist          = false                   # Mass-weighted redistribution or volume-weighted
cdr_gdnv.limit_slopes         = true                    # Use slope-limiters for godunov
cdr_gdnv.plt_vars             = phi vel src dco ebflux  # Plot variables. Options are 'phi', 'vel', 'dco', 'src'
cdr_gdnv.extrap_source        = true                    # Flag for including source term for time-extrapolation
cdr_gdnv.plot_mode            = density                 # Plot densities 'density' or particle numbers ('numbers')
cdr_gdnv.gmg_verbosity        = -1                      # GMG verbosity
cdr_gdnv.gmg_pre_smooth       = 6                       # Number of relaxations in GMG downsweep
cdr_gdnv.gmg_post_smooth      = 6                       # Number of relaxations in upsweep
cdr_gdnv.gmg_bott_smooth      = 6                       # NUmber of relaxations before dropping to bottom solver
cdr_gdnv.gmg_min_iter         = 5                       # Minimum number of iterations
cdr_gdnv.gmg_max_iter         = 32                      # Maximum number of iterations
cdr_gdnv.gmg_tolerance        = 1.E-8                   # Residue tolerance
cdr_gdnv.gmg_hang             = 0.2                     # Solver hang
cdr_gdnv.gmg_bottom_drop      = 2                       # Bottom drop
cdr_gdnv.gmg_bottom_solver    = bicgstab                # Bottom solver type. Valid options are 'simple' and 'bicgstab'
cdr_gdnv.gmg_bottom_relax     = 8                       # Number of relaxations in bottom solve ('simple' solver only)
cdr_gdnv.gmg_cycle            = vcycle                  # Cycle type. Only 'vcycle' supported for now
cdr_gdnv.gmg_relax_type       = gsrb                    # Relaxation type. 'jacobi', 'gauss_seidel', or 'gsrb'


# ====================================================================================================
# GEO_COARSENER CLASS OPTIONS
# ====================================================================================================
geo_coarsener.num_boxes   = 0            # Number of coarsening boxes (0 = don't coarsen)
geo_coarsener.box1_lo     = 0.0 0.0 0.0  # Remove irregular cell tags 
geo_coarsener.box1_hi     = 0.0 0.0 0.0  # between these two corners
geo_coarsener.box1_lvl    = 0            # up to this level
geo_coarsener.box1_inv    = false        # Remove except inside box (true)

# ====================================================================================================
# ROD_SPHERE CLASS OPTIONS
# ====================================================================================================
rod_sphere.eps0                      = 1                # Background permittivity
rod_sphere.turn_off_electrode        = false            # Turn on/off electrode
rod_sphere.turn_off_dielectric       = false            # Turn on/off dielectric
rod_sphere.electrode_live            = true             # Live electrode or not
rod_sphere.electrode_radius          = 0.1              # Electrode inner radius
rod_sphere.electrode_center1         = 0 0.5            # Center 1
rod_sphere.electrode_center2         = 0 2.0            # Center 2. 
rod_sphere.dielectric_permittivity   = 4.0              # Dielectric permittivity
rod_sphere.dielectric_center         = 0.0 0            # Dielectric center
rod_sphere.dielectric_radius         = 0.1              # Dielectric radius

# ====================================================================================================
# ADVECTION_DIFFUSION CLASS OPTIONS
#
# This class does an expcliti AMR advection-diffusion simulation of a super-Gaussian blob with
# wall flow BCs.
# ====================================================================================================
advection_diffusion.blob_amplitude = 1.0     # Blob amplitude
advection_diffusion.blob_radius    = 0.1     # Blob radius
advection_diffusion.blob_center    = 0 0.5   # Blob center
advection_diffusion.diffusion      = true    # Turn on/off diffusion
advection_diffusion.advection      = true    # Turn on/off advection

# Velocity, diffusion, and CFL
# ----------------------------
advection_diffusion.diffco         = 1.0     # Diffusion coefficient
advection_diffusion.omega          = 1.0     # Rotation velocity
advection_diffusion.cfl            = 0.5     # CFL number

# Cell tagging stuff
# ------------------
advection_diffusion.refine_curv = 0.1          # Refine if curvature exceeds this
advection_diffusion.refine_magn = 1E-2         # Only tag if magnitude eceeds this
advection_diffusion.buffer      = 0            # Grow tagged cells     