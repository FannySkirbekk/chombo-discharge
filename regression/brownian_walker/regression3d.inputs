# ====================================================================================================
# AMR_MESH OPTIONS
# ====================================================================================================
amr_mesh.lo_corner       = -1 -1 -1    # Low corner
amr_mesh.hi_corner       =  1  1  1    # High corner
amr_mesh.verbosity       = -1          # Controls verbosity. 
amr_mesh.coarsest_domain = 64 64 64    # Number of cells on coarsest domain
amr_mesh.max_amr_depth   = 2           # Maximum amr depth
amr_mesh.max_sim_depth   = 2           # Maximum simulation depth
amr_mesh.refine_all_lvl  = 0           # Refine everything down to this level.
amr_mesh.mg_coarsen      = 4           # Pre-coarsening of MG levels, useful for deeper bottom solves 
amr_mesh.fill_ratio      = 1.0         # Fill ratio for grid generation
amr_mesh.irreg_growth    = 2           # How much to grow irregular tagged cells
amr_mesh.buffer_size     = 2           # Number of cells between grid levels
amr_mesh.grid_algorithm  = tiled       # Berger-Rigoustous 'br' or 'tiled' for the tiled algorithm
amr_mesh.blocking_factor = 16          # Default blocking factor (16 in 3D)
amr_mesh.max_box_size    = 16          # Maximum allowed box size
amr_mesh.max_ebis_box    = 16          # Maximum allowed box size
amr_mesh.ref_rat         = 2 2 2 2 2 2 # Refinement ratios
amr_mesh.num_ghost       = 3           # Number of ghost cells. Default is 3
amr_mesh.eb_ghost        = 4           # Set number of of ghost cells for EB stuff
amr_mesh.centroid_sten   = linear      # Centroid interp stencils. 'pwl', 'linear', 'taylor, 'lsq'
amr_mesh.eb_sten         = pwl         # EB interp stencils. 'pwl', 'linear', 'taylor, 'lsq'
amr_mesh.redist_radius   = 1           # Redistribution radius for hyperbolic conservation laws
amr_mesh.ghost_interp    = pwl         # Ghost cell interpolation type. Valid options are 'pwl' or 'quad'
amr_mesh.load_balance    = volume      # Load balancing algorithm. Valid options are 'volume' or 'elliptic'
amr_mesh.ebcf            = false        # If you have EBCF crossing, this must be true. 

# ====================================================================================================
# DRIVER OPTIONS
# ====================================================================================================
driver.verbosity                       = 2             # Engine verbosity
driver.geometry_generation             = plasmac       # Grid generation method, 'plasmac' or 'chombo'
driver.geometry_scan_level             = 0             # Geometry scan level for plasmac geometry generator
driver.recursive_regrid                = false         # Recursive regrids
driver.plot_interval                   = 5             # Plot interval
driver.regrid_interval                 = 5             # Regrid interval
driver.checkpoint_interval             = -1            # Checkpoint interval
driver.initial_regrids                 = 0             # Number of initial regrids
driver.start_time                      = 0             # Start time (fresh simulations only)
driver.stop_time                       = 3.0           # Stop time
driver.max_steps                       = 100           # Maximum number of steps
driver.geometry_only                   = false         # Special option that ONLY plots the geometry
driver.ebis_memory_load_balance        = false         # Use memory as loads for EBIS generation
driver.write_memory                    = false         # Write MPI memory report 
driver.write_ebis                      = false         # Write geometry to an HDF5 file
driver.read_ebis                       = false         # Read EBIS when restarting a simulation
driver.output_directory                = ./            # Output directory
driver.grow_tags                       = 0             # Grow tagged by this in every direction
driver.output_names                    = simulation    # Simulation output names
driver.max_plot_depth                  = -1            # Restrict maximum plot depth (-1 => finest simulation level)
driver.max_chk_depth                   = -1            # Restrict chechkpoint depth (-1 => finest simulation level)	
driver.num_plot_ghost                  = 1             # Number of ghost cells to include in plots
driver.plt_vars                        = 0             # 'tags', 'mpi_rank'
driver.restart                         = 0             # Restart step (less or equal to 0 implies fresh simulation)
driver.allow_coarsening                = false         # Allows removal of grid levels according to cell_tagger
driver.refine_geometry                 = -1            # Refine geometry, -1 => Refine all the way down
driver.refine_electrodes               = -1            # Refine electrode surfaces. -1 => equal to refine_geometry
driver.refine_dielectrics              = -1            # Refine dielectric surfaces. -1 => equal to refine_geometry
driver.refine_electrode_gas_interface  = -1            # Refine electrode-gas interfaces. -1 => ----"-----
driver.refine_dielectric_gas_interface = -1            # Refine dielectric-gas interfaces. -1 => ----"-----
driver.refine_solid_gas_interface      = -1            # Refine solid-gas interfaces. -1 => ----"-----
driver.refine_solid_solid_interface    = -1            # Refine solid-solid interfaces. -1 => ----"-----


# ====================================================================================================
# ITO_SOLVER CLASS OPTIONS
# ====================================================================================================
ito_solver.pvr_buffer          = 2             # Buffer for PVR. Prevents clouds from leaking onto coarse levels. 
ito_solver.plt_vars            = phi vel dco   # Currently available are 'phi', 'vel', and 'dco'
ito_solver.bisect_step         = 1.E-4         # Bisection step length for intersection tests
ito_solver.seed                = 0             # Seed for RNG
ito_solver.normal_max          = 1.E99         # Max normal
ito_solver.max_diffusion_hop   = 1             # Maximum length of diffusion hop, relative to cell
ito_solver.redistribute        = true          # Turn on/off redistribution. 
ito_solver.blend_conservation  = false         # Turn on/off blending with nonconservative divergenceo
ito_solver.normal_max          = 3.0           # Maximum value (absolute) that can be drawn from the exponential distribution.
ito_solver.checkpointing       = numbers       # Use particle numbers for writing/reading checkpoint files
ito_solver.ppc_restart         = 32            # Maximum number of computational particles to generate for restarts.
ito_solver.plot_deposition     = cic           # Cloud-in-cell for plotting particles.
ito_solver.deposition          = cic           # 'ngp' = nearest grid point
                                               # 'cic' = cloud-in-cell
                                               # 'tsc' = triangle-shaped-cloud
                                               # 'w4'  = 3rd order interpolation
                                               # 'cic' = cloud-in-cell
                                               # 'tsc' = triangle-shaped-cloud
                                               # 'w4'  = 3rd order interpolation

# ====================================================================================================
# GEO_COARSENER CLASS OPTIONS
# ====================================================================================================
geo_coarsener.num_boxes   = 0            # Number of coarsening boxes (0 = don't coarsen)
geo_coarsener.box1_lo     = 0. 0. 0.     # Remove irregular cell tags 
geo_coarsener.box1_hi     = 0. 0. 0.     # between these two corners
geo_coarsener.box1_lvl    = 0            # up to this level
geo_coarsener.box1_inv    = false        # Remove except inside box (true)

# ====================================================================================================
# ROD_SPHERE CLASS OPTIONS
# ====================================================================================================
rod_sphere.eps0                      = 1                # Background permittivity
rod_sphere.turn_off_electrode        = true             # Turn on/off electrode
rod_sphere.turn_off_dielectric       = false            # Turn on/off dielectric
rod_sphere.electrode_live            = true             # Live electrode or not
rod_sphere.electrode_radius          = 0.05             # Electrode inner radius
rod_sphere.electrode_center1         = 0 0.0 0.5        # Center 1
rod_sphere.electrode_center2         = 0 0.0 2.0        # Center 2. 
rod_sphere.dielectric_permittivity   = 4.0              # Dielectric permittivity
rod_sphere.dielectric_center         = 0 0 0            # Dielectric center
rod_sphere.dielectric_radius         = 0.15             # Dielectric radius

# ====================================================================================================
# BROWNIAN_WALKER PHYSICS CLASS OPTIONS
#
# This class does an expclit AMR advection-diffusion simulation of Brownian walker particles drawn
# from a Gaussian distribution. 
# ====================================================================================================
brownian_walker.verbosity      = -1       # Verbosity
brownian_walker.realm          = primal   # Realm
brownian_walker.diffusion      = true     # Turn on/off diffusion
brownian_walker.advection      = true     # Turn on/off advection
brownian_walker.blob_amplitude = 1.0      # Blob amplitude
brownian_walker.blob_radius    = 0.5      # Blob radius
brownian_walker.blob_center    = 0 0.25 0 # Blob center
brownian_walker.seed           = 0        # RNG seed
brownian_walker.num_particles  = 100000   # Number of initial particles
brownian_walker.max_cells_hop  = 1.0      # Maximum cells to move in one time step
brownian_walker.ppc            = 32       # Target particles per cell
brownian_walker.load_balance   = false    # Turn on/off particle load balancing		

# Velocity, diffusion, and CFL
# ----------------------------
brownian_walker.diffco         = 0.10     # Diffusion coefficient
brownian_walker.omega          = 1.0      # Rotation velocity

# Cell tagging stuff
# ------------------
brownian_walker.refine_curv = 0.1          # Refine if curvature exceeds this
brownian_walker.refine_magn = 1E-2         # Only tag if magnitude eceeds this
brownian_walker.buffer      = 0            # Grow tagged cells     
